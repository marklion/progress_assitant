// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest

#ifndef PA_REST_H
#define PA_REST_H

#include <ngrest/common/Service.h>
#include <ngrest/common/Callback.h>
#include <ngrest/engine/Handler.h>

//! Dummy description for the service
/*! Some detailed description of the service */
// '*location' comment sets resource path for this service
// *location: pa_rest

struct rest_userinfo {
    std::string name;
    std::string role;
    std::string company;
    std::string logo;
    bool online;
};
class pa_rest: public ngrest::Service
{
public:
    // Here is an example of service operation
    //! Dummy description for the operation
    /*! Some detailed description of the operation */
    // To invoke this operation from browser open: http://localhost:9098/pa_rest/World!
    //
    // '*location' metacomment sets path to operation relative to service operation.
    // Default value is operation name.
    // This will bind "echo" method to resource path: http://host:port/pa_rest/{text}
    // *location: /{text}
    //
    // '*method' metacomment sets HTTP method for the operation. GET is default method.
    // *method: GET
    //
    std::string echo(const std::string& text);

    // *location: /userinfo/{pa_ssid}
    // *method: GET
    rest_userinfo proc_get_userinfo(const std::string& pa_ssid);

    // *location: /wechat_login
    // *method: POST
    void proc_post_wechat_login_async(const std::string& code, ngrest::Callback<const std::string&>& callback);
};


#endif // PA_REST_H



